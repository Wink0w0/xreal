<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmd.xreal.mapper.TEmloyeeDao">
  <resultMap id="BaseResultMap" type="com.tmd.xreal.entities.TEmloyee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
  </resultMap>
  <resultMap id="TOrders" type="com.tmd.xreal.entities.TOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="t_employ_id" jdbcType="INTEGER" property="tEmployId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="DOUBLE" property="price" />
  </resultMap>
  <resultMap id="EmployeeContainOrder" type="com.tmd.xreal.dto.TEmployContainOrder">
    <id column="t_id" jdbcType="INTEGER" property="id" />
    <result column="t_name" jdbcType="VARCHAR" property="name" />
    <result column="t_address" jdbcType="VARCHAR" property="address" />
    <result column="t_birthday" jdbcType="DATE" property="birthday" />
    <result column="t_salary" jdbcType="DOUBLE" property="salary" />
    <association property="tOrders" resultMap="TOrders" columnPrefix="o_"></association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, address, birthday, salary
  </sql>
  <select id="selectByExample" parameterType="com.tmd.xreal.entities.TEmloyeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_emloyee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_emloyee
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByLikeName" resultMap="BaseResultMap" >
    <bind name="likeName" value="'%'+ param1+'%'"></bind>
 select <include refid="Base_Column_List" />
    from  t_emloyee
    where name like #{likeName}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_emloyee

  </select>

  <select id="selectByTime"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from t_emloyee
    <where>
      <if test="param1 != null">
        `name` = #{param1,jdbcType=VARCHAR} AND
      </if>
      <if test="param2 != null">
        birthday &gt;=#{param2,jdbcType=DATE} AND
      </if>
      <if test="param3 != null">
        birthday &lt;= #{param3,jdbcType=DATE}
      </if>
    </where>
  </select>

  <select id="selectTemployAndOrders" resultMap="EmployeeContainOrder">
    select
     t.id t_id , t.`name` t_name , t.address t_address, t.birthday t_birthday, t.salary t_salary,
     o.id o_id, o.t_employ_id o_t_employ_id, o.`name` o_name, o. price o_price
    from t_emloyee t
    left join t_order o on t.id=o.t_employ_id
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_emloyee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tmd.xreal.entities.TEmloyeeExample">
    delete from t_emloyee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tmd.xreal.entities.TEmloyee" >
    insert into t_emloyee (`id`,`name`, address, birthday,
      salary)
    values (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
      #{salary,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tmd.xreal.entities.TEmloyee" >
    insert into t_emloyee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="salary != null">
        salary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tmd.xreal.entities.TEmloyeeExample" resultType="java.lang.Long">
    select count(*) from t_emloyee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_emloyee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_emloyee
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      salary = #{record.salary,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tmd.xreal.entities.TEmloyee">
    update t_emloyee
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tmd.xreal.entities.TEmloyee">
    update t_emloyee
    set `name` = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      salary = #{salary,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>